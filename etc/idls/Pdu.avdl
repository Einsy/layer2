/**
 * Avro types.
 *
 * We aren't using namespaces here because they aren't handled property by the
 * Avro C++ header generator (they are ignored). This implies that all names
 * must be unique anyway. Maybe fix this in the future.
 *
 */
protocol Pdu {

  record Unsupported {
    string name;
    bytes data;
  }

  // Dot11.

  @doc("MAC address")
  fixed MacAddr(6);

  enum Dot11Capability {
    ESS,
    IBSS,
    CF_POLL,
    CF_POLL_REQ,
    PRIVACY,
    SHORT_PREAMBLE,
    PBCC,
    CHANNEL_AGILITY,
    SPECTRUM_MGMT,
    QOS,
    SST,
    APSD,
    RADIO_MEASUREMENT,
    DSSS_OFDM,
    DELAYED_BLOCK_ACK,
    IMMEDIATE_BLOCK_ACK
  }

  record Dot11Beacon {
    boolean toDs;
    boolean fromDs;
    boolean moreFrag;
    boolean wep;
    boolean order;
    boolean retry;
    boolean powerMgmt;
    int fragNum;
    int seqNum;
    MacAddr addr1;
    MacAddr addr2;
    MacAddr addr3;
    MacAddr addr4;
    long timestamp;
    long interval;
    array<Dot11Capability> capabilities;
  }

  // Radiotap.

  enum RadiotapChannelType {
    TURBO, CCK, OFDM, TWO_GZ, FIVE_GZ, PASSIVE, DYN_CCK_OFDM, GFSK
  }

  record RadiotapChannel {
    int freq;
    RadiotapChannelType type;
  }

  enum RadiotapFlag {
    CFP,
    PREAMBLE,
    WEP,
    FRAGMENTATION,
    FCS,
    PADDING,
    FAILED_FCS,
    SHORT_GI
  }

  record Radiotap {
    long tsft = 0;
    array<RadiotapFlag> flags;
    int rate = 0;
    union {null, RadiotapChannel} channel = null;
    union {
      null,
      Unsupported,
      Dot11Beacon
    } pdu = null;
  }

  record Pdu {
    union {
      Unsupported,
      Radiotap
    } pdu;
  }

}
